<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Seb&#39;s blog</title>
<link>https://sbloggel.netlify.app/</link>
<atom:link href="https://sbloggel.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description>Seb&#39;s private blog about statistics and other topics</description>
<generator>quarto-1.4.553</generator>
<lastBuildDate>Tue, 11 Mar 2025 23:00:00 GMT</lastBuildDate>
<item>
  <title>Genetic algorithm</title>
  <link>https://sbloggel.netlify.app/posts/2025-03-12-genetic-algorithm/2025-03-12-genetic-algorithm.html</link>
  <description><![CDATA[ 




<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<ul>
<li>We want to fit a model with parameters to data</li>
<li>Given: Data points and a function to calculate a loss function for a given parameter set</li>
<li>What we don’t have: Derivative of the loss function with respect to the parameters – hence, gradient-descent-type approaches don’t work</li>
<li>Genetic algorithms are a population-based heuristic method that can optimize even when the loss function is non-differentiable or discontinuous</li>
</ul>
</section>
<section id="example" class="level2">
<h2 class="anchored" data-anchor-id="example">Example</h2>
<section id="true-model" class="level3">
<h3 class="anchored" data-anchor-id="true-model">True model</h3>
<ul>
<li>We assume a linear model with <img src="https://latex.codecogs.com/png.latex?n"> data points and <img src="https://latex.codecogs.com/png.latex?p"> predictors: <img src="https://latex.codecogs.com/png.latex?%0Ay%20=%20X%5Cbeta%20+%20%5Cepsilon,%20%5Cepsilon_i%20%5Csim%20%5Cmathcal%7BN%7D%0A"></li>
<li>The true value of <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> is also sampled from a normal distribution</li>
</ul>
</section>
<section id="optimization-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="optimization-algorithm">Optimization algorithm</h3>
<ul>
<li>We define the residual sum of squares (RSS) as our loss function</li>
<li>We sample a “population” of <img src="https://latex.codecogs.com/png.latex?k"> <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> vectors from a normal distribution and store them in a <img src="https://latex.codecogs.com/png.latex?p%20%5Ctimes%20k"> matrix</li>
<li>We repeat <img src="https://latex.codecogs.com/png.latex?m"> times:
<ul>
<li><em>Selection</em>: The top 50% of individuals (i.e., those with the lowest RSS) are selected and then duplicated to maintain the population size</li>
<li><em>Mutation</em>: We nudge the elements of <img src="https://latex.codecogs.com/png.latex?P"> by element-wise multiplication with a matrix with identical dimension filled with values sampled from a log-normal distribution with <em>log_mean=0</em> and <em>log_sd=s</em>
<ul>
<li>all updates maintain the sign of the parameter (=limitation of the algorithm)</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="simulate-data" class="level2">
<h2 class="anchored" data-anchor-id="simulate-data">Simulate data</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of data points</span></span>
<span id="cb1-3">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># number of predictors</span></span>
<span id="cb1-4">beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(p)    </span>
<span id="cb1-5">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p))</span>
<span id="cb1-6">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> beta)[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n)</span>
<span id="cb1-7">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(X)</span>
<span id="cb1-8">dat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y</span></code></pre></div>
</div>
</section>
<section id="step-by-step" class="level2">
<h2 class="anchored" data-anchor-id="step-by-step">Step by step</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create parameter population:</span></span>
<span id="cb2-2">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb2-3">P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p))</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict for first population:</span></span>
<span id="cb2-6">X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> P[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]
[1,] -2.6923821
[2,] -0.9079354
[3,]  2.5717631
[4,] -0.7271242
[5,] -1.9068247</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict for all populations:</span></span>
<span id="cb4-2">X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> P</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]       [,2]       [,3]       [,4]        [,5]        [,6]
[1,] -2.6923821 -0.0364105  1.6766805  3.6372388 -0.75769629  2.55864211
[2,] -0.9079354 -0.1400709 -0.3928391 -1.4049246 -0.08305583 -0.05567578
[3,]  2.5717631 -2.0741455  1.7157369 -0.3375375 -0.25292504  0.25861132
[4,] -0.7271242 -0.6415608  0.7350531  0.1902818 -0.35503138  0.83636691
[5,] -1.9068247  0.3473681 -0.6325051 -0.9800653 -0.11743395  0.18277684</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Residuals for all populations:</span></span>
<span id="cb6-2">X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> P <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]       [,2]       [,3]       [,4]       [,5]       [,6]
[1,] -4.4706386 -1.8146670 -0.1015760  1.8589823 -2.5359527  0.7803857
[2,] -0.2993083  0.4685562  0.2157880 -0.7962975  0.5255712  0.5529513
[3,]  0.8236239 -3.8222847 -0.0324023 -2.0856767 -2.0010643 -1.4895279
[4,] -1.2890299 -1.2034664  0.1731474 -0.3716238 -0.9169370  0.2744612
[5,] -0.6160802  1.6381126  0.6582395  0.3106793  1.1733106  1.4735214</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define function to calc RSS:</span></span>
<span id="cb8-2">calc_RSS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(X, y, P) {</span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>((X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> P <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, sum)</span>
<span id="cb8-4">}</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calc RSS:</span></span>
<span id="cb8-7">(l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_RSS</span>(X, y, P))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 22.7957041 22.2541658  0.5211913  8.6745785 12.9289711  5.3800447</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># determine indices of better half of population:</span></span>
<span id="cb10-2">(ii <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(l)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3 6 4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select better half and replicate:</span></span>
<span id="cb12-2">(P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> P[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(ii, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]       [,2]       [,3]       [,4]        [,5]        [,6]
[1,]  0.4179416  0.4179416  1.1000254  1.1000254  0.38767161  0.38767161
[2,]  1.3586796  1.3586796  0.7631757  0.7631757 -0.05380504 -0.05380504
[3,] -0.1027877 -0.1027877 -0.1645236 -0.1645236 -1.37705956 -1.37705956</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mutate population:</span></span>
<span id="cb14-2">(P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> P <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(P), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sdlog =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]       [,2]       [,3]       [,4]        [,5]        [,6]
[1,]  0.4126804  0.4037936  1.1431183  1.1221411  0.36638711  0.38061849
[2,]  1.4068617  1.3114568  0.7589008  0.7401753 -0.05780171 -0.05106812
[3,] -0.1056888 -0.1046786 -0.1719338 -0.1673538 -1.52039545 -1.41685050</code></pre>
</div>
</div>
</section>
<section id="whole-game" class="level2">
<h2 class="anchored" data-anchor-id="whole-game">Whole game</h2>
<section id="put-algorithm-in-a-function" class="level3">
<h3 class="anchored" data-anchor-id="put-algorithm-in-a-function">Put algorithm in a function</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Genetic Algorithm Optimizer</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Implements a genetic algorithm to optimize a parameter matrix for minimizing residual sum of squares (RSS).</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param X A matrix of predictor variables.</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param y A numeric vector of response values.</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param k An integer specifying the number of parameter sets (population size).</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param m An integer specifying the number of iterations (default: 1000).</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param s A numeric value specifying the standard deviation of the log-normal mutation factor (default: 0.01).</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return A list containing:</span></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \describe{</span></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'   \item{P}{A matrix of optimized parameter sets.}</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'   \item{rss_history}{A numeric vector of minimum RSS values across iterations.}</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' }</span></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#'</span></span>
<span id="cb16-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @details</span></span>
<span id="cb16-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' This function applies a genetic algorithm to optimize parameters for a given dataset. It initializes a random population of parameters, evaluates the RSS, selects the best-performing half of the population, duplicates them, and applies mutations.</span></span>
<span id="cb16-19">genetic_algorithm_optimizer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(X, y, k, </span>
<span id="cb16-20">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>) {</span>
<span id="cb16-21">  P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> p, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p)) </span>
<span id="cb16-22">  rss_history <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> m)</span>
<span id="cb16-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>m) {</span>
<span id="cb16-24">    l <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_RSS</span>(X, y, P)</span>
<span id="cb16-25">    rss_history[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(l)</span>
<span id="cb16-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selection: Keep the top 50% with lowest RSS and duplicate them</span></span>
<span id="cb16-27">    ii <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(l)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(k <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-28">    P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> P[, ii]</span>
<span id="cb16-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mutation:</span></span>
<span id="cb16-30">    P <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> P <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(P), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sdlog =</span> s)</span>
<span id="cb16-31">  }</span>
<span id="cb16-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P =</span> P, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rss_history =</span> rss_history)</span>
<span id="cb16-33">}</span></code></pre></div>
</div>
</section>
<section id="run-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="run-algorithm">Run algorithm</h3>
<ul>
<li>Some suggestions for playing around with tuning parameters:
<ul>
<li>Vary number of individuals <img src="https://latex.codecogs.com/png.latex?k"> from 2 to 1000 (only non-odd integers please)</li>
<li>Vary number of iterations <img src="https://latex.codecogs.com/png.latex?m"> from 10 to 1000 (look at plot of RSS to adjust in a smart fashion)</li>
<li>Vary standard deviation on log scale of mutation strength <img src="https://latex.codecogs.com/png.latex?s"> from 0.001 to 0.1</li>
</ul></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sol <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">genetic_algorithm_optimizer</span>(X, y, </span>
<span id="cb17-2">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb17-3">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, </span>
<span id="cb17-4">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(sol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rss_history, </span>
<span id="cb17-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, </span>
<span id="cb17-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y'</span>, </span>
<span id="cb17-8">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RSS of "best individual"'</span>, </span>
<span id="cb17-9">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RSS on log scale'</span>, </span>
<span id="cb17-10">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Iteration'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sbloggel.netlify.app/posts/2025-03-12-genetic-algorithm/2025-03-12-genetic-algorithm_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Comparing the results of linear model solution and genetic algorithm</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># when converged, all individuals should be very similar </span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --&gt; showing only individual 1:</span></span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">analytic_solution =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)), </span>
<span id="cb18-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genetic_algorithm_solution =</span> sol<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>P[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   analytic_solution genetic_algorithm_solution
V1        0.09093336               -0.005674275
V2        1.23160902                1.175974150
V3       -0.41057390               -0.459881868</code></pre>
</div>
</div>
<ul>
<li>Genetic algorithm seems to have difficulties “finding” solutions with the correct sign of the first element of <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> for small populations – larger populations (e. g. <em>k = 1000</em>) do the job quite reliably</li>
</ul>


</section>
</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2025-03-12-genetic-algorithm/2025-03-12-genetic-algorithm.html</guid>
  <pubDate>Tue, 11 Mar 2025 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Profiling in R and Julia</title>
  <link>https://sbloggel.netlify.app/posts/2024-12-22-profiling-in-r-and-julia/2024-12-22-profiling-in-r-and-julia.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span></code></pre></div>
</div>
<section id="profiling-in-r" class="level2">
<h2 class="anchored" data-anchor-id="profiling-in-r">Profiling in R</h2>
<ul>
<li>Explained on <a href="https://support.posit.co/hc/en-us/articles/218221837-Profiling-R-code-with-the-RStudio-IDE">Posit Website</a></li>
</ul>
<section id="for-example" class="level3">
<h3 class="anchored" data-anchor-id="for-example">For example</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'profvis'</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># help(package = 'profvis')</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">profvis</span>({</span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(diamonds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diamonds)</span>
<span id="cb2-7">  m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(price <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> carat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diamonds)</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb2-9">})</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sbloggel.netlify.app/posts/2024-12-22-profiling-in-r-and-julia/2024-12-22-profiling-in-r-and-julia_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div class="profvis html-widget html-fill-item" id="htmlwidget-0e89647b85505f48407c" style="width:100%;height:600px;"></div>
<script type="application/json" data-for="htmlwidget-0e89647b85505f48407c">{"x":{"message":{"prof":{"time":[1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,38,38,38,38],"depth":[4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,4,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1],"label":["deparse","deparse1","plot.default","plot.formula","deparse","deparse1","plot.default","plot.formula","deparse","deparse1","plot.default","plot.formula","deparse","deparse1","plot.default","plot.formula","deparse","deparse1","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","plot.xy","plot.default","plot.formula","anyDuplicated.default","[.data.frame","na.omit.data.frame","model.frame.default"],"filenum":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linenum":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"memalloc":[23.77728271484375,23.77728271484375,23.77728271484375,23.77728271484375,23.77728271484375,23.77728271484375,23.77728271484375,23.77728271484375,23.92333221435547,23.92333221435547,23.92333221435547,23.92333221435547,24.37510681152344,24.37510681152344,24.37510681152344,24.37510681152344,24.58029174804688,24.58029174804688,24.58029174804688,24.58029174804688,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,28.61900329589844,32.55451965332031,32.55451965332031,32.55451965332031,32.55451965332031],"meminc":[0,0,0,0,0,0,0,0,0.1460494995117188,0,0,0,0.4517745971679688,0,0,0,0.2051849365234375,0,0,0,4.038711547851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.935516357421875,0,0,0],"filename":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"interval":10,"files":[],"prof_output":"/var/folders/jl/yt17k74x37l_mv93mfg5h7n00000gn/T//Rtmp35m4YW/filec5c222e9b886.prof","highlight":{"output":["^output\\$"],"gc":["^<GC>$"],"stacktrace":["^\\.\\.stacktraceo(n|ff)\\.\\.$"]},"split":"h"}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">profvis</span>({</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e5</span>)</span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>)</span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e7</span>)</span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e8</span>)</span>
<span id="cb3-6">})</span></code></pre></div>
<div class="cell-output-display">
<div class="profvis html-widget html-fill-item" id="htmlwidget-7a77b016291093be8bdc" style="width:100%;height:600px;"></div>
<script type="application/json" data-for="htmlwidget-7a77b016291093be8bdc">{"x":{"message":{"prof":{"time":[1,2,3,3,4,4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,33,34,34,35,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"depth":[1,1,2,1,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"label":["rnorm","rnorm","<GC>","rnorm","<GC>","rnorm","<GC>","rnorm","<GC>","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","<GC>","rnorm","<GC>","rnorm","<GC>","rnorm","<GC>","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm","rnorm"],"filenum":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"linenum":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"memalloc":[25.47499847412109,25.47499847412109,17.07785034179688,17.07785034179688,17.07784271240234,17.07784271240234,17.07784271240234,17.07784271240234,17.07784271240234,17.07784271240234,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,93.37162780761719,17.07768249511719,17.07768249511719,17.07768249511719,17.07768249511719,17.07768249511719,17.07768249511719,17.07768249511719,17.07768249511719,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172,780.0171356201172],"meminc":[0,0,-8.397148132324219,0,-7.62939453125e-06,0,0,0,0,0,76.29378509521484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-76.2939453125,0,0,0,0,0,0,0,762.939453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"filename":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"interval":10,"files":[],"prof_output":"/var/folders/jl/yt17k74x37l_mv93mfg5h7n00000gn/T//Rtmp35m4YW/filec5c26242d545.prof","highlight":{"output":["^output\\$"],"gc":["^<GC>$"],"stacktrace":["^\\.\\.stacktraceo(n|ff)\\.\\.$"]},"split":"h"}},"evals":[],"jsHooks":[]}</script>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-12-22-profiling-in-r-and-julia/2024-12-22-profiling-in-r-and-julia.html</guid>
  <pubDate>Sat, 21 Dec 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>ODE benchmark: R, Python and Julia</title>
  <link>https://sbloggel.netlify.app/posts/2024-12-17-ode-benchmark-r-python-and-julia/2024-12-17-ode-benchmark-r-python-and-julia.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reticulate'</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_condaenv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sbloggel'</span>)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'JuliaCall'</span>)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">julia_setup</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">JULIA_HOME =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Users/seb/.juliaup/bin/'</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'microbenchmark'</span>)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'deSolve'</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pz =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34451</span>, </span>
<span id="cb2-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Kz =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2274</span>, </span>
<span id="cb2-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pxy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.118</span>, </span>
<span id="cb2-8">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Pyx =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.721</span>, </span>
<span id="cb2-9">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TKI =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.742</span>, </span>
<span id="cb2-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Py =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, </span>
<span id="cb2-11">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Ky =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, </span>
<span id="cb2-12">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, </span>
<span id="cb2-13">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rz =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, </span>
<span id="cb2-14">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb2-15">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb2-16">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">e =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb2-17">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-18">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1110861</span>, </span>
<span id="cb2-19">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">181818</span>, </span>
<span id="cb2-20">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Z0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>)</span>
<span id="cb2-21"></span>
<span id="cb2-22">deriv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(time, state, parameters) {</span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(state, parameters)), {</span>
<span id="cb2-24">    dX <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Pyx <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pxy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X</span>
<span id="cb2-25">    dY <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Pxy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pyx <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Py <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Ky) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TKI <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y</span>
<span id="cb2-26">    dZ <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rz <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Pz <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Kz <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z</span>
<span id="cb2-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(dX, dY, dZ)))</span>
<span id="cb2-28">  })</span>
<span id="cb2-29">}</span>
<span id="cb2-30"></span>
<span id="cb2-31">sim_cml <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>X0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Z =</span> p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Z0),</span>
<span id="cb2-33">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb2-34">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func =</span> deriv,</span>
<span id="cb2-35">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parms =</span> p)</span>
<span id="cb2-36">}</span>
<span id="cb2-37"></span>
<span id="cb2-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">microbenchmark</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_cml</span>())</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in microbenchmark(sim_cml()): less accurate nanosecond times to avoid
potential integer overflows</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Unit: milliseconds
      expr     min       lq     mean   median       uq      max neval
 sim_cml() 7.43535 7.783214 8.529941 7.926489 8.405492 20.33387   100</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sim_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_cml</span>()</span>
<span id="cb5-2"></span>
<span id="cb5-3">sim_result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unclass</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> name)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log10'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sbloggel.netlify.app/posts/2024-12-17-ode-benchmark-r-python-and-julia/2024-12-17-ode-benchmark-r-python-and-julia_files/figure-html/R-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.integrate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> odeint</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotnine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> p9</span>
<span id="cb6-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timeit</span>
<span id="cb6-7"></span>
<span id="cb6-8">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34451</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2274</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.118</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.721</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.742</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-9">y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1110861</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">181818</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>)</span>
<span id="cb6-10">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)</span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> deriv(y, t, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>params):</span>
<span id="cb6-13">  X, Y, Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y</span>
<span id="cb6-14">  Pz, Kz, Pxy, Pyx, TKI, Py, Ky, m, rz, a, b, e, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> params</span>
<span id="cb6-15">  dX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pyx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pxy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X</span>
<span id="cb6-16">  dY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pxy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pyx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Ky) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TKI <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y</span>
<span id="cb6-17">  dZ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Pz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Kz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z</span>
<span id="cb6-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dX, dY, dZ</span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sim_cml():</span>
<span id="cb6-21">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> odeint(deriv, y0, t, args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>p)</span>
<span id="cb6-22"></span>
<span id="cb6-23">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timeit.repeat(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim_cml()'</span>, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>())</span>
<span id="cb6-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean:'</span>, np.mean(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ms</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Min: '</span>, np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ms</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Max: '</span>, np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ms'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Mean: 4.1981229196244385 ms
Min:  4.056500001752283 ms
Max:  5.0466249958844855 ms</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sim_cml()</span>
<span id="cb8-2"></span>
<span id="cb8-3"></span>
<span id="cb8-4">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(sol, columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z'</span>])</span>
<span id="cb8-5">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t</span>
<span id="cb8-6">df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.melt(df, </span>
<span id="cb8-7">                  id_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>], </span>
<span id="cb8-8">                  value_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z'</span>],</span>
<span id="cb8-9">                  value_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_count'</span>)</span>
<span id="cb8-10"></span>
<span id="cb8-11"></span>
<span id="cb8-12">(</span>
<span id="cb8-13">  p9.ggplot(df_long, p9.aes(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_count'</span>, colour<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'variable'</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-14">  p9.geom_line() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-15">  p9.scale_y_continuous(trans<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log10'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-16">  p9.labs(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cell count'</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Compartment'</span>)</span>
<span id="cb8-17">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;string&gt;:3: FutureWarning: Using repr(plot) to draw and show the plot figure is deprecated and will be removed in a future version. Use plot.show().
&lt;Figure Size: (640 x 480)&gt;</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sbloggel.netlify.app/posts/2024-12-17-ode-benchmark-r-python-and-julia/2024-12-17-ode-benchmark-r-python-and-julia_files/figure-html/python-1.png" class="img-fluid figure-img" width="614"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="julia" class="level2">
<h2 class="anchored" data-anchor-id="julia">Julia</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">DifferentialEquations</span></span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Plots</span></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">BenchmarkTools</span></span>
<span id="cb10-4"></span>
<span id="cb10-5"></span>
<span id="cb10-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cml_model!</span>(du, u, p, t)</span>
<span id="cb10-7">    X, Y, Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> u</span>
<span id="cb10-8">    Pz, Kz, Pxy, Pyx, TKI, Py, Ky, m, rz, a, b, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">e</span>, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> p</span>
<span id="cb10-9">    du[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pyx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pxy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X</span>
<span id="cb10-10">    du[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pxy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Pyx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Py <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Ky) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TKI <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Y</span>
<span id="cb10-11">    du[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Pz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (Kz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Z</span>
<span id="cb10-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>cml_model! (generic function with 1 method)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode julia code-with-copy"><code class="sourceCode julia"><span id="cb12-1"></span>
<span id="cb12-2">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">34451</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2274</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.118</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.721</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.742</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>];</span>
<span id="cb12-3">u_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1110861</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">181818</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>];</span>
<span id="cb12-4">tspan <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span>);</span>
<span id="cb12-5"></span>
<span id="cb12-6"></span>
<span id="cb12-7">prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ODEProblem</span>(cml_model!, u_0, tspan, p);</span>
<span id="cb12-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">@benchmark</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(prob, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tsit5</span>()) samples<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>;</span>
<span id="cb12-9"></span>
<span id="cb12-10">sol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(prob, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tsit5</span>());</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(sol, xlabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell counts"</span>, legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>right, lw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, yscale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>log10, primary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">false</span>);</span>
<span id="cb12-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot!</span>(sol.t, sol[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>blue);</span>
<span id="cb12-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot!</span>(sol.t, sol[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>red);</span>
<span id="cb12-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot!</span>(sol.t, sol[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=:</span>green)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sbloggel.netlify.app/posts/2024-12-17-ode-benchmark-r-python-and-julia/2024-12-17-ode-benchmark-r-python-and-julia_files/figure-html/julia-J1.png" class="img-fluid figure-img" width="300"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="accessing-python-and-julia-results-from-r" class="level2">
<h2 class="anchored" data-anchor-id="accessing-python-and-julia-results-from-r">Accessing Python and Julia results from R</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">julia_eval</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sol'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Julia Object of type ODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, Vector{Vector{Vector{Float64}}}, Nothing, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, SciMLBase.StandardODEProblem}, Tsit5{typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}, OrdinaryDiffEqCore.InterpolationData{ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Vector{Vector{Float64}}, Vector{Float64}, Vector{Vector{Vector{Float64}}}, Nothing, OrdinaryDiffEqTsit5.Tsit5Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}, Nothing}, SciMLBase.DEStats, Nothing, Nothing, Nothing, Nothing}.
ODESolution{Float64, 2, Vector{Vector{Float64}}, Nothing, Nothing, Vector{Float64}, Vector{Vector{Vector{Float64}}}, Nothing, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, SciMLBase.StandardODEProblem}, Tsit5{typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}, OrdinaryDiffEqCore.InterpolationData{ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Vector{Vector{Float64}}, Vector{Float64}, Vector{Vector{Vector{Float64}}}, Nothing, OrdinaryDiffEqTsit5.Tsit5Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}, Nothing}, SciMLBase.DEStats, Nothing, Nothing, Nothing, Nothing}([[1.110861e6, 181818.0, 110.0], [1.110320736566853e6, 168557.46485009938, 110.16948075019477], [1.106604807122799e6, 147930.6736426544, 110.86413791256679], [1.0985502257877742e6, 129922.17793934005, 112.14710598658381], [1.0849447420207812e6, 114854.25878911797, 114.07861937121608], [1.0659524918309492e6, 103632.89845680301, 116.4287194900375], [1.0414097160974556e6, 95491.2696527296, 118.95387965333855], [1.0117865569064613e6, 89602.2173886478, 121.36138343767911], [976971.3210188394, 84964.7827643776, 123.5390908950952], [936853.1488760669, 80820.68807108115, 125.53689843431981]  …  [1931.795999343364, 164.77759051525908, 247.482912612217], [1747.2122451058158, 149.47894570067874, 213.30138804354806], [1577.9094120811105, 135.24605811222523, 190.8428591029721], [1420.8250712004283, 121.94119782679975, 174.4440136673766], [1275.1125119327376, 109.54339564821882, 161.789467826988], [1141.0859801641143, 98.10483134356895, 151.76725898165475], [1018.6297702717881, 87.6305804287386, 143.68857928149185], [907.5294228361369, 78.11186351530466, 137.0986758111222], [807.4300138809123, 69.52471450631812, 131.67736341259743], [740.863326069274, 63.80814245772568, 128.27128458701765]], nothing, nothing, [0.0, 0.11079030912404289, 0.327889514741159, 0.5931413440753226, 0.9248865770794376, 1.3166019105075957, 1.7813693164475994, 2.32415925281185, 2.963012941237689, 3.717247670126816  …  82.90975956432736, 84.69035765864942, 86.50209819913655, 88.36933752529319, 90.29846276793224, 92.28031503480668, 94.30775226997457, 96.37155655415539, 98.46109892311965, 100.0], [[[1.110861e6, 181818.0, 110.0]], [[9.179999999993015, -129480.1232562, 0.8396159984024507], [-1656.0378527778958, -126149.82253799125, 1.0805753865295742], [-3276.4213539976627, -122902.5669618069, 1.3053026986284237], [-8650.313076748556, -112119.77112431086, 2.0721589442521235], [-9386.9637023494, -110641.0030469101, 2.1860938727044754], [-9568.22868627512, -110276.92755725028, 2.2137905970929808], [-9487.91475796701, -110431.42070404685, 2.1741803362684493]], [[-9487.91475796701, -110431.42070404685, 2.1741803362684493], [-12231.774812055708, -104910.91600012, 2.5655120128396334], [-14747.372145948932, -99823.5407969275, 2.886416743921103], [-22937.515128002706, -83221.0115699002, 4.06973307937173], [-24138.405377140414, -80793.95896352967, 4.318377864603065], [-24427.83061118389, -80208.03431349352, 4.376781097909486], [-23921.351544136473, -81180.86948722067, 4.08434310850339]], [[-23921.351544136473, -81180.86948722067, 4.08434310850339], [-26300.421374975966, -76316.12325357174, 4.396233848897026], [-28416.27425591575, -71949.41195655013, 4.61984795965455], [-35295.36998751495, -57699.83437799791, 5.556419265927701], [-36369.14509107653, -55494.008516490445, 5.829357854511869], [-36625.220540498296, -54966.38807964595, 5.892551674396799], [-35955.036348693175, -56252.139027292316, 5.4343284041482605]], [[-35955.036348693175, -56252.139027292316, 5.4343284041482605], [-37894.66141025757, -52164.81829862674, 5.635892510495978], [-39541.07166178353, -48630.61341905458, 5.730068590044738], [-44933.02090567336, -36998.010310297796, 6.367952562486664], [-45882.05224771012, -34998.934330785254, 6.698246563826046], [-46105.27428147933, -34526.19353982283, 6.774243804602918], [-45213.5589714981, -36235.404675828104, 6.047696718722847]], [[-45213.5589714981, -36235.404675828104, 6.047696718722847], [-46524.737842450035, -33295.08609711626, 6.095388127923513], [-47577.713063771924, -30838.900212251487, 6.043860301495812], [-51084.244940406745, -22615.07141887542, 6.274006905513517], [-51801.20335760221, -21032.590943868934, 6.600997199508896], [-51967.82137170635, -20661.289122892937, 6.676373242400473], [-51063.07424869704, -22394.464931975206, 5.828687856915565]], [[-51063.07424869704, -22394.464931975206, 5.828687856915565], [-51820.40139597596, -20445.24846758988, 5.73889506666012], [-52368.18594217139, -18885.490446501397, 5.575162242493093], [-54272.92842539998, -13486.465658934874, 5.477141181847372], [-54777.362041058674, -12277.721466779702, 5.779424617187033], [-54892.999840268196, -11995.754056143764, 5.850088557232112], [-54037.14107988171, -13634.652348623218, 4.9836741323297815]], [[-54037.14107988171, -13634.652348623218, 4.9836741323297815], [-54339.00093279625, -12486.886234380727, 4.812980839695911], [-54493.05795598135, -11609.484801524755, 4.607210684549386], [-55119.31477491879, -8415.787631623381, 4.321775675571985], [-55414.95014921381, -7573.74150640022, 4.547307717474155], [-55481.426430986714, -7377.6672186329015, 4.601349552241032], [-54787.61497774736, -8705.972229382038, 3.909224404011127]], [[-54787.61497774736, -8705.972229382038, 3.909224404011127], [-54768.28508779262, -8090.362108411908, 3.7312241109042077], [-54653.715408765966, -7644.019492663516, 3.55059150266473], [-54383.784586499205, -5885.005253617492, 3.253942177669188], [-54510.91387109094, -5327.276345587816, 3.398751043232778], [-54538.0227336118, -5197.058182144079, 3.4350062983295118], [-54023.00750710679, -6183.2200834334435, 2.977836744414276]], [[-54023.00750710679, -6183.2200834334435, 2.977836744414276], [-53790.269732213426, -5883.795034576731, 2.848093948287527], [-53502.627336730504, -5676.478409861054, 2.731163684606713], [-52625.686079530424, -4768.890578024591, 2.5395261402084373], [-52617.2488757796, -4428.342652032938, 2.620922110757448], [-52612.71818063189, -4348.193484116215, 2.6426484224630826], [-52276.955468126376, -4992.157709053048, 2.3958121401348933]]  …  [[-121.66658355562046, -9.573877493308814, -46.790624996310726], [-119.49546965793533, -9.485387165439946, -41.300869874550926], [-117.37369776155928, -9.382637509110268, -37.80619504105539], [-110.2260490210303, -8.960864041271108, -15.954617389741827], [-109.20893469283946, -8.830340370076044, -4.7983701021070715], [-108.96097061172003, -8.792419197694002, -2.074521237124145], [-109.14728516101515, -8.958128861654899, -24.700765029277363]], [[-109.14728516101515, -8.958128861654899, -24.700765029277363], [-107.30666031455962, -8.843179933824757, -22.321342969014836], [-105.4891074374066, -8.720043230923949, -20.853651142624017], [-99.35672871037872, -8.298338129886133, -10.546140317191657], [-98.49155013120891, -8.22817430689146, -4.887539496388115], [-98.27870677756113, -8.208525273761538, -3.493106189093453], [-98.39672507229689, -8.232229210457277, -15.097065408360322]], [[-98.39672507229689, -8.232229210457277, -15.097065408360322], [-96.74127327157915, -8.109985594282747, -13.955902462308018], [-95.0995699461198, -7.983970523083499, -13.256442634224413], [-89.5677128740276, -7.563626184007333, -7.789316907404043], [-88.79676611908472, -7.503934035006722, -4.635201321330101], [-88.60645949254489, -7.488014793274786, -3.8487558587698345], [-88.68090272665664, -7.4913585030693355, -10.334208334711946]], [[-88.68090272665664, -7.4913585030693355, -10.334208334711946], [-87.15881250011398, -7.370672540265673, -9.697750372748317], [-85.6474541612224, -7.248626869032179, -9.305131801133768], [-80.56293646784125, -6.840155781980343, -5.955032469830371], [-79.86051519502608, -6.781688215108289, -3.9458299819517038], [-79.6869281602099, -6.76649409685983, -3.438344643408243], [-79.7377547685279, -6.773488808435346, -7.575586309757512]], [[-79.7377547685279, -6.773488808435346, -7.575586309757512], [-78.33222399750117, -6.658288230858446, -7.167463498755126], [-76.93662553349222, -6.542933244762892, -6.91693292651172], [-72.24770664721119, -6.15432714473458, -4.578640306156501], [-71.60335834923214, -6.0970031592993195, -3.1084670474373297], [-71.44408321701417, -6.082260115212918, -2.731968128219762], [-71.48248814569726, -6.094438399235315, -5.777462446678669]], [[-71.48248814569726, -6.094438399235315, -5.777462446678669], [-70.1931430098613, -5.986800420791539, -5.490843234251258], [-68.91331291032877, -5.879682763393831, -5.318565880494589], [-64.61788130593783, -5.51615339773268, -3.5465850117307696], [-64.0298669949519, -5.460568583167031, -2.3709849531386453], [-63.884526811455146, -5.4463295636306555, -2.0658027732786195], [-63.91456226065226, -5.463372391581203, -4.523887117032359]], [[-63.91456226065226, -5.463372391581203, -4.523887117032359], [-62.73853690534412, -5.364020463252956, -4.309746923956311], [-61.5716541776745, -5.265615260813462, -4.185865118766969], [-57.65894286387141, -4.928942550600269, -2.7603046433880536], [-57.12509475413378, -4.875355648960259, -1.75787380623035], [-56.99317373524809, -4.861638000594958, -1.494160406902779], [-57.01666440295046, -4.88323257000976, -3.613739514426811]], [[-57.01666440295046, -4.88323257000976, -3.613739514426811], [-55.951014787979446, -4.792412148406484, -3.445786887759823], [-54.89399601682914, -4.702837738846178, -3.3541577255585935], [-51.35270154189673, -4.393437726900679, -2.1489812784950004], [-50.871154455137145, -4.34182573866633, -1.2489488525623642], [-50.752198171340304, -4.328595437462539, -1.0091935534240974], [-50.76981830012948, -4.354799630931183, -2.9351821616058373]], [[-50.76981830012948, -4.354799630931183, -2.9351821616058373], [-49.810685939568536, -4.272469142255176, -2.7974459138648626], [-48.8594928685841, -4.19160301602362, -2.7285144974775903], [-45.675262043502514, -3.9091117509384077, -1.658896836071733], [-45.243848188536965, -3.859402670190917, -0.8100549607596577], [-45.13732037522668, -3.846624785885048, -0.5813676078715275], [-45.149422478892276, -3.877404753596778, -2.4199143376811776]], [[-45.149422478892276, -3.877404753596778, -2.4199143376811776], [-44.52208067231395, -3.823190132633762, -2.3348547427613653], [-43.8932934851532, -3.7694061733144295, -2.283010880896427], [-41.772935307185385, -3.583030935459597, -1.8173138095580725], [-41.48408660628319, -3.553145447310719, -1.5242022919941007], [-41.41245743206085, -3.545657510628999, -1.4494666729379162], [-41.41620176415412, -3.5577116305606395, -2.0566040725846904]]], nothing, ODEProblem{Vector{Float64}, Tuple{Float64, Float64}, true, Vector{Float64}, ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}, SciMLBase.StandardODEProblem}(ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}(FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}((FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}(Ptr{Nothing} @0x000000012f87011c, Ptr{Nothing} @0x0000000138298c98, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}(Ptr{Nothing} @0x000000012f8b811c, Ptr{Nothing} @0x0000000138298ca0, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}(Ptr{Nothing} @0x000000012f8d011c, Ptr{Nothing} @0x0000000138298ca8, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}(Ptr{Nothing} @0x000000012f8e811c, Ptr{Nothing} @0x0000000138298cb0, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}))), UniformScaling{Bool}(true), nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, SciMLBase.DEFAULT_OBSERVED, nothing, nothing, nothing, nothing), [1.110861e6, 181818.0, 110.0], (0.0, 100.0), [34451.0, 2274.0, 0.118, 0.721, 0.742, 0.05, 1.0e6, 0.0001, 200.0, 2.0, 0.0, 2.0, 1.0], Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}(), SciMLBase.StandardODEProblem()), Tsit5{typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}(OrdinaryDiffEqCore.trivial_limiter!, OrdinaryDiffEqCore.trivial_limiter!, static(false)), OrdinaryDiffEqCore.InterpolationData{ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}, Vector{Vector{Float64}}, Vector{Float64}, Vector{Vector{Vector{Float64}}}, Nothing, OrdinaryDiffEqTsit5.Tsit5Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}, Nothing}(ODEFunction{true, SciMLBase.AutoSpecialize, FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}, UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED), Nothing, Nothing, Nothing, Nothing}(FunctionWrappersWrappers.FunctionWrappersWrapper{Tuple{FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}, FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}}, false}((FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64}}(Ptr{Nothing} @0x000000012f87011c, Ptr{Nothing} @0x0000000138298c98, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Float64}}(Ptr{Nothing} @0x000000012f8b811c, Ptr{Nothing} @0x0000000138298ca0, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}(Ptr{Nothing} @0x000000012f8d011c, Ptr{Nothing} @0x0000000138298ca8, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}), FunctionWrappers.FunctionWrapper{Nothing, Tuple{Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}, Vector{Float64}, ForwardDiff.Dual{ForwardDiff.Tag{DiffEqBase.OrdinaryDiffEqTag, Float64}, Float64, 1}}}(Ptr{Nothing} @0x000000012f8e811c, Ptr{Nothing} @0x0000000138298cb0, Base.RefValue{SciMLBase.Void{typeof(cml_model!)}}(SciMLBase.Void{typeof(cml_model!)}(Main.cml_model!)), SciMLBase.Void{typeof(cml_model!)}))), UniformScaling{Bool}(true), nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, nothing, SciMLBase.DEFAULT_OBSERVED, nothing, nothing, nothing, nothing), [[1.110861e6, 181818.0, 110.0], [1.110320736566853e6, 168557.46485009938, 110.16948075019477], [1.106604807122799e6, 147930.6736426544, 110.86413791256679], [1.0985502257877742e6, 129922.17793934005, 112.14710598658381], [1.0849447420207812e6, 114854.25878911797, 114.07861937121608], [1.0659524918309492e6, 103632.89845680301, 116.4287194900375], [1.0414097160974556e6, 95491.2696527296, 118.95387965333855], [1.0117865569064613e6, 89602.2173886478, 121.36138343767911], [976971.3210188394, 84964.7827643776, 123.5390908950952], [936853.1488760669, 80820.68807108115, 125.53689843431981]  …  [1931.795999343364, 164.77759051525908, 247.482912612217], [1747.2122451058158, 149.47894570067874, 213.30138804354806], [1577.9094120811105, 135.24605811222523, 190.8428591029721], [1420.8250712004283, 121.94119782679975, 174.4440136673766], [1275.1125119327376, 109.54339564821882, 161.789467826988], [1141.0859801641143, 98.10483134356895, 151.76725898165475], [1018.6297702717881, 87.6305804287386, 143.68857928149185], [907.5294228361369, 78.11186351530466, 137.0986758111222], [807.4300138809123, 69.52471450631812, 131.67736341259743], [740.863326069274, 63.80814245772568, 128.27128458701765]], [0.0, 0.11079030912404289, 0.327889514741159, 0.5931413440753226, 0.9248865770794376, 1.3166019105075957, 1.7813693164475994, 2.32415925281185, 2.963012941237689, 3.717247670126816  …  82.90975956432736, 84.69035765864942, 86.50209819913655, 88.36933752529319, 90.29846276793224, 92.28031503480668, 94.30775226997457, 96.37155655415539, 98.46109892311965, 100.0], [[[1.110861e6, 181818.0, 110.0]], [[9.179999999993015, -129480.1232562, 0.8396159984024507], [-1656.0378527778958, -126149.82253799125, 1.0805753865295742], [-3276.4213539976627, -122902.5669618069, 1.3053026986284237], [-8650.313076748556, -112119.77112431086, 2.0721589442521235], [-9386.9637023494, -110641.0030469101, 2.1860938727044754], [-9568.22868627512, -110276.92755725028, 2.2137905970929808], [-9487.91475796701, -110431.42070404685, 2.1741803362684493]], [[-9487.91475796701, -110431.42070404685, 2.1741803362684493], [-12231.774812055708, -104910.91600012, 2.5655120128396334], [-14747.372145948932, -99823.5407969275, 2.886416743921103], [-22937.515128002706, -83221.0115699002, 4.06973307937173], [-24138.405377140414, -80793.95896352967, 4.318377864603065], [-24427.83061118389, -80208.03431349352, 4.376781097909486], [-23921.351544136473, -81180.86948722067, 4.08434310850339]], [[-23921.351544136473, -81180.86948722067, 4.08434310850339], [-26300.421374975966, -76316.12325357174, 4.396233848897026], [-28416.27425591575, -71949.41195655013, 4.61984795965455], [-35295.36998751495, -57699.83437799791, 5.556419265927701], [-36369.14509107653, -55494.008516490445, 5.829357854511869], [-36625.220540498296, -54966.38807964595, 5.892551674396799], [-35955.036348693175, -56252.139027292316, 5.4343284041482605]], [[-35955.036348693175, -56252.139027292316, 5.4343284041482605], [-37894.66141025757, -52164.81829862674, 5.635892510495978], [-39541.07166178353, -48630.61341905458, 5.730068590044738], [-44933.02090567336, -36998.010310297796, 6.367952562486664], [-45882.05224771012, -34998.934330785254, 6.698246563826046], [-46105.27428147933, -34526.19353982283, 6.774243804602918], [-45213.5589714981, -36235.404675828104, 6.047696718722847]], [[-45213.5589714981, -36235.404675828104, 6.047696718722847], [-46524.737842450035, -33295.08609711626, 6.095388127923513], [-47577.713063771924, -30838.900212251487, 6.043860301495812], [-51084.244940406745, -22615.07141887542, 6.274006905513517], [-51801.20335760221, -21032.590943868934, 6.600997199508896], [-51967.82137170635, -20661.289122892937, 6.676373242400473], [-51063.07424869704, -22394.464931975206, 5.828687856915565]], [[-51063.07424869704, -22394.464931975206, 5.828687856915565], [-51820.40139597596, -20445.24846758988, 5.73889506666012], [-52368.18594217139, -18885.490446501397, 5.575162242493093], [-54272.92842539998, -13486.465658934874, 5.477141181847372], [-54777.362041058674, -12277.721466779702, 5.779424617187033], [-54892.999840268196, -11995.754056143764, 5.850088557232112], [-54037.14107988171, -13634.652348623218, 4.9836741323297815]], [[-54037.14107988171, -13634.652348623218, 4.9836741323297815], [-54339.00093279625, -12486.886234380727, 4.812980839695911], [-54493.05795598135, -11609.484801524755, 4.607210684549386], [-55119.31477491879, -8415.787631623381, 4.321775675571985], [-55414.95014921381, -7573.74150640022, 4.547307717474155], [-55481.426430986714, -7377.6672186329015, 4.601349552241032], [-54787.61497774736, -8705.972229382038, 3.909224404011127]], [[-54787.61497774736, -8705.972229382038, 3.909224404011127], [-54768.28508779262, -8090.362108411908, 3.7312241109042077], [-54653.715408765966, -7644.019492663516, 3.55059150266473], [-54383.784586499205, -5885.005253617492, 3.253942177669188], [-54510.91387109094, -5327.276345587816, 3.398751043232778], [-54538.0227336118, -5197.058182144079, 3.4350062983295118], [-54023.00750710679, -6183.2200834334435, 2.977836744414276]], [[-54023.00750710679, -6183.2200834334435, 2.977836744414276], [-53790.269732213426, -5883.795034576731, 2.848093948287527], [-53502.627336730504, -5676.478409861054, 2.731163684606713], [-52625.686079530424, -4768.890578024591, 2.5395261402084373], [-52617.2488757796, -4428.342652032938, 2.620922110757448], [-52612.71818063189, -4348.193484116215, 2.6426484224630826], [-52276.955468126376, -4992.157709053048, 2.3958121401348933]]  …  [[-121.66658355562046, -9.573877493308814, -46.790624996310726], [-119.49546965793533, -9.485387165439946, -41.300869874550926], [-117.37369776155928, -9.382637509110268, -37.80619504105539], [-110.2260490210303, -8.960864041271108, -15.954617389741827], [-109.20893469283946, -8.830340370076044, -4.7983701021070715], [-108.96097061172003, -8.792419197694002, -2.074521237124145], [-109.14728516101515, -8.958128861654899, -24.700765029277363]], [[-109.14728516101515, -8.958128861654899, -24.700765029277363], [-107.30666031455962, -8.843179933824757, -22.321342969014836], [-105.4891074374066, -8.720043230923949, -20.853651142624017], [-99.35672871037872, -8.298338129886133, -10.546140317191657], [-98.49155013120891, -8.22817430689146, -4.887539496388115], [-98.27870677756113, -8.208525273761538, -3.493106189093453], [-98.39672507229689, -8.232229210457277, -15.097065408360322]], [[-98.39672507229689, -8.232229210457277, -15.097065408360322], [-96.74127327157915, -8.109985594282747, -13.955902462308018], [-95.0995699461198, -7.983970523083499, -13.256442634224413], [-89.5677128740276, -7.563626184007333, -7.789316907404043], [-88.79676611908472, -7.503934035006722, -4.635201321330101], [-88.60645949254489, -7.488014793274786, -3.8487558587698345], [-88.68090272665664, -7.4913585030693355, -10.334208334711946]], [[-88.68090272665664, -7.4913585030693355, -10.334208334711946], [-87.15881250011398, -7.370672540265673, -9.697750372748317], [-85.6474541612224, -7.248626869032179, -9.305131801133768], [-80.56293646784125, -6.840155781980343, -5.955032469830371], [-79.86051519502608, -6.781688215108289, -3.9458299819517038], [-79.6869281602099, -6.76649409685983, -3.438344643408243], [-79.7377547685279, -6.773488808435346, -7.575586309757512]], [[-79.7377547685279, -6.773488808435346, -7.575586309757512], [-78.33222399750117, -6.658288230858446, -7.167463498755126], [-76.93662553349222, -6.542933244762892, -6.91693292651172], [-72.24770664721119, -6.15432714473458, -4.578640306156501], [-71.60335834923214, -6.0970031592993195, -3.1084670474373297], [-71.44408321701417, -6.082260115212918, -2.731968128219762], [-71.48248814569726, -6.094438399235315, -5.777462446678669]], [[-71.48248814569726, -6.094438399235315, -5.777462446678669], [-70.1931430098613, -5.986800420791539, -5.490843234251258], [-68.91331291032877, -5.879682763393831, -5.318565880494589], [-64.61788130593783, -5.51615339773268, -3.5465850117307696], [-64.0298669949519, -5.460568583167031, -2.3709849531386453], [-63.884526811455146, -5.4463295636306555, -2.0658027732786195], [-63.91456226065226, -5.463372391581203, -4.523887117032359]], [[-63.91456226065226, -5.463372391581203, -4.523887117032359], [-62.73853690534412, -5.364020463252956, -4.309746923956311], [-61.5716541776745, -5.265615260813462, -4.185865118766969], [-57.65894286387141, -4.928942550600269, -2.7603046433880536], [-57.12509475413378, -4.875355648960259, -1.75787380623035], [-56.99317373524809, -4.861638000594958, -1.494160406902779], [-57.01666440295046, -4.88323257000976, -3.613739514426811]], [[-57.01666440295046, -4.88323257000976, -3.613739514426811], [-55.951014787979446, -4.792412148406484, -3.445786887759823], [-54.89399601682914, -4.702837738846178, -3.3541577255585935], [-51.35270154189673, -4.393437726900679, -2.1489812784950004], [-50.871154455137145, -4.34182573866633, -1.2489488525623642], [-50.752198171340304, -4.328595437462539, -1.0091935534240974], [-50.76981830012948, -4.354799630931183, -2.9351821616058373]], [[-50.76981830012948, -4.354799630931183, -2.9351821616058373], [-49.810685939568536, -4.272469142255176, -2.7974459138648626], [-48.8594928685841, -4.19160301602362, -2.7285144974775903], [-45.675262043502514, -3.9091117509384077, -1.658896836071733], [-45.243848188536965, -3.859402670190917, -0.8100549607596577], [-45.13732037522668, -3.846624785885048, -0.5813676078715275], [-45.149422478892276, -3.877404753596778, -2.4199143376811776]], [[-45.149422478892276, -3.877404753596778, -2.4199143376811776], [-44.52208067231395, -3.823190132633762, -2.3348547427613653], [-43.8932934851532, -3.7694061733144295, -2.283010880896427], [-41.772935307185385, -3.583030935459597, -1.8173138095580725], [-41.48408660628319, -3.553145447310719, -1.5242022919941007], [-41.41245743206085, -3.545657510628999, -1.4494666729379162], [-41.41620176415412, -3.5577116305606395, -2.0566040725846904]]], nothing, true, OrdinaryDiffEqTsit5.Tsit5Cache{Vector{Float64}, Vector{Float64}, Vector{Float64}, typeof(OrdinaryDiffEqCore.trivial_limiter!), typeof(OrdinaryDiffEqCore.trivial_limiter!), Static.False}([740.863326069274, 63.80814245772568, 128.27128458701765], [807.4300138809123, 69.52471450631812, 131.67736341259743], [-45.149422478892276, -3.877404753596778, -2.4199143376811776], [-44.52208067231395, -3.823190132633762, -2.3348547427613653], [-43.8932934851532, -3.7694061733144295, -2.283010880896427], [-41.772935307185385, -3.583030935459597, -1.8173138095580725], [-41.48408660628319, -3.553145447310719, -1.5242022919941007], [-41.41245743206085, -3.545657510628999, -1.4494666729379162], [-41.41620176415412, -3.5577116305606395, -2.0566040725846904], [5.2472774615055044e-5, -0.00012492917954315378, -0.005554104008688035], [740.7165139967104, 63.78930821019554, 127.87569427066805], [6.498731620778965e-5, -0.001796877319855532, -0.04217932137632176], OrdinaryDiffEqCore.trivial_limiter!, OrdinaryDiffEqCore.trivial_limiter!, static(false)), nothing, false), true, 0, SciMLBase.DEStats(1095, 0, 0, 0, 0, 0, 0, 0, 0, 0, 174, 8, 0.0), nothing, SciMLBase.ReturnCode.Success, nothing, nothing, nothing)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df_long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 303
Columns: 3
$ t          &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…
$ variable   &lt;chr&gt; "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X",…
$ cell_count &lt;dbl&gt; 1110861.0, 1081492.5, 1029529.0, 974974.8, 922175.9, 871981…</code></pre>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li>Execution time roughly
<ul>
<li>Times:
<ul>
<li>8 ms n R</li>
<li>4 ms in Python</li>
<li>0.08 ms in Julia</li>
</ul></li>
<li>Hence Julia approx 100x faster than R and 50x faster than Python!</li>
</ul></li>
<li>Calculation results from Python and Julia can easily be accessed in R!</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-12-17-ode-benchmark-r-python-and-julia/2024-12-17-ode-benchmark-r-python-and-julia.html</guid>
  <pubDate>Mon, 16 Dec 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Saving output from R terminal</title>
  <link>https://sbloggel.netlify.app/posts/2024-12-16-saving-output-from-r-terminal/2024-12-16-saving-output-from-r-terminal.html</link>
  <description><![CDATA[ 




<p>In order to save output from within <code>R</code>, the <code>sink</code> commmand usually can do the job. Have a look also at the help page.</p>
<p>To save all output:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#! eval: false</span></span>
<span id="cb1-2">zz <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all.Rout"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wt"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sink</span>(zz)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sink</span>(zz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"message"</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  1  2  3  4  5  6  7  8  9 10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stop('An eror is an error!')</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warning</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A warning is a warning!'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: A warning is a warning!</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sink</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"message"</span>)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sink</span>()</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.show</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all.Rout"</span>)</span></code></pre></div>
</div>



 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-12-16-saving-output-from-r-terminal/2024-12-16-saving-output-from-r-terminal.html</guid>
  <pubDate>Sun, 15 Dec 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Comparing counts</title>
  <link>https://sbloggel.netlify.app/posts/2024-12-06-comparing-counts/2024-12-06-comparing-counts.html</link>
  <description><![CDATA[ 




<section id="description-of-problem" class="level2">
<h2 class="anchored" data-anchor-id="description-of-problem">Description of problem</h2>
<ul>
<li>Two random variables <img src="https://latex.codecogs.com/png.latex?X_1"> and <img src="https://latex.codecogs.com/png.latex?X_2"> with realiziations <img src="https://latex.codecogs.com/png.latex?x_1"> and <img src="https://latex.codecogs.com/png.latex?x_2">, each following a Poisson distribution with rates <img src="https://latex.codecogs.com/png.latex?%5Clambda_1"> and <img src="https://latex.codecogs.com/png.latex?%5Clambda_2"></li>
<li>Null hypothesis: <img src="https://latex.codecogs.com/png.latex?%5Clambda_1%20=%20%5Clambda_2"></li>
</ul>
</section>
<section id="approximate-naive-test" class="level2">
<h2 class="anchored" data-anchor-id="approximate-naive-test">Approximate, naive test</h2>
<p>We can construct an approximate, pragmatic statistical test. The test statistic <img src="https://latex.codecogs.com/png.latex?k%20=%20x_2%20-%20x_1"> follows approximately (asymptotically with growing <img src="https://latex.codecogs.com/png.latex?%5Clambda_1"> and <img src="https://latex.codecogs.com/png.latex?%5Clambda_2">) a normal distribution with <img src="https://latex.codecogs.com/png.latex?%5Cmu%20=%200"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%20%5Csqrt%7Bx_1%20+%20x_2%7D">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span></span>
<span id="cb1-2">x_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1600</span></span>
<span id="cb1-3">k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_2</span>
<span id="cb1-4">sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_2)</span>
<span id="cb1-5">(p_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pnorm</span>(k, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.07248609</code></pre>
</div>
</div>
</section>
<section id="exact-test" class="level2">
<h2 class="anchored" data-anchor-id="exact-test">Exact test</h2>
<p><code>R</code> offers an exact test.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson.test</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(x_1, x_2))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Comparison of Poisson rates

data:  c(x_1, x_2) time base: 1
count1 = 1500, expected count1 = 1550, p-value = 0.07537
alternative hypothesis: true rate ratio is not equal to 1
95 percent confidence interval:
 0.8731506 1.0065506
sample estimates:
rate ratio 
    0.9375 </code></pre>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>It may be surprising – but measurement of two counts for different conditions can be enough in order to test for equality of event rates.</p>


</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-12-06-comparing-counts/2024-12-06-comparing-counts.html</guid>
  <pubDate>Thu, 05 Dec 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Neue Klimaabschätzungen</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-13-neue-klimaabschätzungen/2024-11-13-neue-klimaabschätzungen.html</link>
  <description><![CDATA[ 




<section id="aufforstung-der-sahara" class="level2">
<h2 class="anchored" data-anchor-id="aufforstung-der-sahara">Aufforstung der Sahara</h2>
<ul>
<li>Dialog mit ChatGPT: <a href="https://chatgpt.com/share/6735244d-a604-8013-b61c-8eb9269d0dbe">Link</a></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb1-2">area_sahara_m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.2e12</span></span>
<span id="cb1-3">co_2_per_forest_kg_per_m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-4">co_2_sahara_per_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> area_sahara_m2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> co_2_per_forest_kg_per_m2</span>
<span id="cb1-5">co_2_sahara_per_year</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4.6e+12</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7e9</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3.5e+13</code></pre>
</div>
</div>
<p>Ergo: Wenn es gelänge die Sahara komplett aufzuforsten, würde das ungefähr 10% des von Menschen emittierten CO2 gleich wieder binden!</p>
</section>
<section id="kumulative-kapazität-der-batterien-von-elektorautos" class="level2">
<h2 class="anchored" data-anchor-id="kumulative-kapazität-der-batterien-von-elektorautos">Kumulative Kapazität der Batterien von Elektorautos</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">nr_of_cars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e7</span></span>
<span id="cb5-2">kWh_per_car <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb5-3">J_per_car <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> kWh_per_car <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span></span>
<span id="cb5-4">J_all_cars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> J_per_car <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> nr_of_cars</span>
<span id="cb5-5">J_all_cars</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.44e+15</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">gesamt_primaer_energie_bedarf_deutschland_J <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e19</span></span>
<span id="cb7-2">energie_pro_tag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gesamt_primaer_energie_bedarf_deutschland_J <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span></span>
<span id="cb7-3">battery_fraction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> J_all_cars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> energie_pro_tag</span>
<span id="cb7-4">battery_fraction</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.05256</code></pre>
</div>
</div>
<p>Ergo: Die Autobatterien könnten ca. 5% der Energie puffern</p>
</section>
<section id="pumpspeicherwerke" class="level2">
<h2 class="anchored" data-anchor-id="pumpspeicherwerke">Pumpspeicherwerke</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">pumpspeicherwerke_J <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">40e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span></span>
<span id="cb9-2">pumpspeicherwerke_J <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> J_all_cars</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">pumpspeicherwerke_J <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> energie_pro_tag</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.005256</code></pre>
</div>
</div>
<p>ChatGPT dazu: <a href="https://chatgpt.com/share/67352ab8-d0ec-8013-855a-03ec71b623f5">Link</a></p>


</section>

 ]]></description>
  <category>Sustainibility</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-13-neue-klimaabschätzungen/2024-11-13-neue-klimaabschätzungen.html</guid>
  <pubDate>Tue, 12 Nov 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Python Enhancement Proposals – Style guide, Type hints and Docstring Conventions</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-11-typing-in-python/2024-11-11-typing-in-python.html</link>
  <description><![CDATA[ 




<p>Python Enhancement Proposals (PEPs)</p>
<ul>
<li>PEP 8 – Style guide – https://peps.python.org/pep-0008/</li>
<li>PEP 484 – Type Hints – https://peps.python.org/pep-0484/</li>
<li>PEP 257 – Docstring Conventions – https://peps.python.org/pep-0257/</li>
</ul>
<div id="9fcfc81d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Union</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> foo(x: Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Union[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb1-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Squares a numeric input (either int or float) and returns the result.</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    x (int or float): The input number to be squared.</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    int or float: The squared result of the input.</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span>(foo)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>10
Help on function foo in module __main__:

foo(x: Union[int, float]) -&gt; Union[int, float]
    Squares a numeric input (either int or float) and returns the result.
    
    Parameters:
    x (int or float): The input number to be squared.
    
    Returns:
    int or float: The squared result of the input.
</code></pre>
</div>
</div>



 ]]></description>
  <category>Python</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-11-typing-in-python/2024-11-11-typing-in-python.html</guid>
  <pubDate>Sun, 10 Nov 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Dal</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-08-dal/2024-11-08-dal.html</link>
  <description><![CDATA[ 




<p>Für ein schmackhaftes Dal für 3 Personen: * 500 g geschälte Mungbohnen * 2-3 kleine Zwiebeln * etwas klein geschnittener Ingwer * Tahin * Haselnussmus * 1 Dose stückige Tomaten * 700 ml Brühe * Gewürze nach gusto</p>
<p>So macht man es: * Zwiebeln andünsten * Gewaschene Bohnen dazu, in Pfanne erhitzen * Brühe dazu, aufkochen * übrige Zutaten dazugeben</p>



 ]]></description>
  <category>Mishmash</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-08-dal/2024-11-08-dal.html</guid>
  <pubDate>Thu, 07 Nov 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Parameter class in Python</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-08-parameter-class-in-python/2024-11-08-parameter-class-in-python.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> param:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb1-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> key, value <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> kwargs.items():</span>
<span id="cb1-4">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">setattr</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, value)</span>
<span id="cb1-5">            </span>
<span id="cb1-6">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> param(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a ='</span>, p.a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>a = 2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b ='</span>, p.b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>b = 3</code></pre>
</div>
</div>



 ]]></description>
  <category>Python</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-08-parameter-class-in-python/2024-11-08-parameter-class-in-python.html</guid>
  <pubDate>Thu, 07 Nov 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Speed of ODE solving in R and Python</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-07-speed-of-ode-solving-in-r-and-python/2024-11-07-speed-of-ode-solving-in-r-and-python.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the timer</span></span>
<span id="cb1-4">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Your code block</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example:</span></span>
<span id="cb1-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000000</span>):</span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># End the timer</span></span>
<span id="cb1-12">end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate and print the elapsed time</span></span>
<span id="cb1-15">execution_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb1-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>execution_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 0.021715879440307617 seconds</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timeit</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define your code block as a function</span></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> code_to_time():</span>
<span id="cb3-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000000</span>):</span>
<span id="cb3-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Measure the execution time</span></span>
<span id="cb3-9">execution_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timeit.timeit(code_to_time, number<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Execution time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>execution_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Execution time: 0.008265999989816919 seconds</code></pre>
</div>
</div>



 ]]></description>
  <category>Python</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-07-speed-of-ode-solving-in-r-and-python/2024-11-07-speed-of-ode-solving-in-r-and-python.html</guid>
  <pubDate>Wed, 06 Nov 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Speed of ODE solving in R and Python</title>
  <link>https://sbloggel.netlify.app/posts/2024-11-01-speed-of-ode-solving-in-r-and-python/2024-11-01-speed-of-ode-solving-in-r-and-python.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the deSolve package</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(deSolve)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the SIR model</span></span>
<span id="cb1-5">sir_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(time, state, parameters) {</span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(state, parameters)), {</span>
<span id="cb1-7">    dS <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> S <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb1-8">    dI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> S <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> gamma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb1-9">    dR <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gamma <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb1-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(dS, dI, dR)))</span>
<span id="cb1-11">  })</span>
<span id="cb1-12">}</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initial state values</span></span>
<span id="cb1-15">initial_state <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">I =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameters</span></span>
<span id="cb1-18">parameters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gamma =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time points</span></span>
<span id="cb1-21">times <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1600</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Solve the system of ODEs</span></span>
<span id="cb1-24">start_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb1-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb1-26">  output <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> initial_state, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> times, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">func =</span> sir_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parms =</span> parameters)</span>
<span id="cb1-27">}</span>
<span id="cb1-28">end_time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>()</span>
<span id="cb1-29">r_runtime <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> end_time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Runtime for deSolve in R:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Runtime for deSolve in R:"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(r_runtime)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Time difference of 1.270186 secs</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.integrate <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> odeint</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the SIR model</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sir_model(y, t, beta, gamma):</span>
<span id="cb5-7">    S, I, R <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y</span>
<span id="cb5-8">    dS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> S <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb5-9">    dI <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> S <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb5-10">    dR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> I</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [dS, dI, dR]</span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initial state values</span></span>
<span id="cb5-14">initial_state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>]</span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameters</span></span>
<span id="cb5-17">beta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb5-18">gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb5-19"></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time points</span></span>
<span id="cb5-21">times <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1601</span>)</span>
<span id="cb5-22"></span>
<span id="cb5-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Solve the system of ODEs</span></span>
<span id="cb5-24">start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb5-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb5-26">  output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> odeint(sir_model, initial_state, times, args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(beta, gamma))</span>
<span id="cb5-27">end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb5-28">python_runtime <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Runtime for scipy.integrate.odeint in Python:"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Runtime for scipy.integrate.odeint in Python:</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(python_runtime)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.035394906997680664</code></pre>
</div>
</div>



 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-11-01-speed-of-ode-solving-in-r-and-python/2024-11-01-speed-of-ode-solving-in-r-and-python.html</guid>
  <pubDate>Thu, 31 Oct 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Regal</title>
  <link>https://sbloggel.netlify.app/posts/2024-10-25-regal/2024-10-25-regal.html</link>
  <description><![CDATA[ 




<ul>
<li>Innenmaß 336 mm</li>
<li>Außenholz 15 mm</li>
<li>Innenholz 12 mm</li>
<li>Tiefe oben 415 mm</li>
<li>Tiefe unten 390 mm</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'knitr'</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4">calc_regal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zahl der Zeilen</span></span>
<span id="cb1-5">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">m =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zahl der Spalten</span></span>
<span id="cb1-6">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d_0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">336</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Kantenlänge Zelle</span></span>
<span id="cb1-7">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d_1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dicke Außenbretter</span></span>
<span id="cb1-8">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d_2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dicke Innenbretter</span></span>
<span id="cb1-9">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t_0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">415</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tiefe höhere Ebenen</span></span>
<span id="cb1-10">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t_1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">390</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tiefe unterste Ebene</span></span>
<span id="cb1-11">                       ) {</span>
<span id="cb1-12">  breite <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_2</span>
<span id="cb1-13">  hoehe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_2</span>
<span id="cb1-14"></span>
<span id="cb1-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> name, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> n, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x1, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x2, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x3,</span>
<span id="cb1-16">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gesamt'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, breite, hoehe, t_0,</span>
<span id="cb1-17">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_oben'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, breite, t_0, d_1,</span>
<span id="cb1-18">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_unten'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, breite, t_1, d_1,</span>
<span id="cb1-19">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_mitte_horizontal'</span>, n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, breite <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_1, t_0, d_2,</span>
<span id="cb1-20">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_seite'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, hoehe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_1, t_0, d_1,</span>
<span id="cb1-21">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_vertikal_unten'</span>, m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, d_0, t_1, d_2,</span>
<span id="cb1-22">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_vertikal_oben'</span>, (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (m <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), d_0, t_0, d_2,</span>
<span id="cb1-23">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brett_verkeilen'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, d_0, d_0, d_2)</span>
<span id="cb1-24">  </span>
<span id="cb1-25">}</span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_regal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">name</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">x1</th>
<th style="text-align: right;">x2</th>
<th style="text-align: right;">x3</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">gesamt</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">714</td>
<td style="text-align: right;">714</td>
<td style="text-align: right;">415</td>
</tr>
<tr class="even">
<td style="text-align: left;">brett_oben</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">714</td>
<td style="text-align: right;">415</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="odd">
<td style="text-align: left;">brett_unten</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">714</td>
<td style="text-align: right;">390</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="even">
<td style="text-align: left;">brett_mitte_horizontal</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">684</td>
<td style="text-align: right;">415</td>
<td style="text-align: right;">12</td>
</tr>
<tr class="odd">
<td style="text-align: left;">brett_seite</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">684</td>
<td style="text-align: right;">415</td>
<td style="text-align: right;">15</td>
</tr>
<tr class="even">
<td style="text-align: left;">brett_vertikal_unten</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">336</td>
<td style="text-align: right;">390</td>
<td style="text-align: right;">12</td>
</tr>
<tr class="odd">
<td style="text-align: left;">brett_vertikal_oben</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">336</td>
<td style="text-align: right;">415</td>
<td style="text-align: right;">12</td>
</tr>
<tr class="even">
<td style="text-align: left;">brett_verkeilen</td>
<td style="text-align: right;">2</td>
<td style="text-align: right;">336</td>
<td style="text-align: right;">336</td>
<td style="text-align: right;">12</td>
</tr>
</tbody>
</table>
</div>
</div>



 ]]></description>
  <category>Mishmash</category>
  <guid>https://sbloggel.netlify.app/posts/2024-10-25-regal/2024-10-25-regal.html</guid>
  <pubDate>Thu, 24 Oct 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Energy consumption of artificial intelligence</title>
  <link>https://sbloggel.netlify.app/posts/2024-10-24-energy-consumption-of-artificial-intelligence/2024-10-24-energy-consumption-of-artificial-intelligence.html</link>
  <description><![CDATA[ 







 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-10-24-energy-consumption-of-artificial-intelligence/2024-10-24-energy-consumption-of-artificial-intelligence.html</guid>
  <pubDate>Wed, 23 Oct 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Ventilation</title>
  <link>https://sbloggel.netlify.app/posts/2024-10-23-ventilation/2024-10-23-ventilation.html</link>
  <description><![CDATA[ 




<p>How much water in liters is removed from a flat with a volume if the air in the flat is changed?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># devtools::install_github("sebastian-gerdes/smisc")</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'smisc'</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff_water</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temperature_out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, </span>
<span id="cb1-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">relative_humidity_outside =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, </span>
<span id="cb1-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temperature_inside =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, </span>
<span id="cb1-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">relative_humidity_inside =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, </span>
<span id="cb1-7">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">volume =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -1.644616</code></pre>
</div>
</div>



 ]]></description>
  <category>Mishmash</category>
  <category>Sustainibility</category>
  <guid>https://sbloggel.netlify.app/posts/2024-10-23-ventilation/2024-10-23-ventilation.html</guid>
  <pubDate>Tue, 22 Oct 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Energie Haus</title>
  <link>https://sbloggel.netlify.app/posts/2024-10-23-energie-haus/2024-10-23-energie-haus.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span></code></pre></div>
</div>
<ul>
<li>ChatGPT sagt, dass ich ca. 1e3 Watt benötige, um 1 kg Stein um 1 Grad zu erwärmen (<a href="https://chatgpt.com/share/6718a0a2-68cc-8013-a9b6-aa25947e9b54">Quelle</a>)</li>
<li>Ein Haus hat eine Masse von ca. 100 Tonnen (1e5 kg)</li>
<li>ChatGPT sagt, dass ich ca. 1e3 Watt benötige, um 1 Kubikmeter Luft um 1 Grad zu erwärmen</li>
<li>Ein Haus hat ein Volumen von ca. 500 Kubikmeter (<img src="https://latex.codecogs.com/png.latex?5e2%20m%5E3">)</li>
</ul>
<p>Der Quotient aus beiden:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 200</code></pre>
</div>
</div>
<p>Ergo 200 mal so viel Energie um die Masse des Hauses um 1 Grad zu erwärmen im Vergleich zur Energie um die Masse der Luft um 1 Grad zu erwärmen!</p>
<section id="wie-viel-energie-um-die-luft-in-einem-haus-500-m3-von-0-auf-20-zu-erwärmen" class="level2">
<h2 class="anchored" data-anchor-id="wie-viel-energie-um-die-luft-in-einem-haus-500-m3-von-0-auf-20-zu-erwärmen">Wie viel Energie um die Luft in einem Haus (500 <img src="https://latex.codecogs.com/png.latex?m%5E3">) von 0° auf 20° zu erwärmen</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">(E_in_J <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1e+07</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">(E_in_kWh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> E_in_J <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.777778</code></pre>
</div>
</div>
</section>
<section id="heizenergie-pro-tag-im-kalten-halbjahr" class="level2">
<h2 class="anchored" data-anchor-id="heizenergie-pro-tag-im-kalten-halbjahr">Heizenergie pro Tag im kalten Halbjahr</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 66.66667</code></pre>
</div>
</div>
<p>–&gt; durch das Lüften entweicht eher der kleinere Teil der Energie</p>


</section>

 ]]></description>
  <category>Sustainibility</category>
  <guid>https://sbloggel.netlify.app/posts/2024-10-23-energie-haus/2024-10-23-energie-haus.html</guid>
  <pubDate>Tue, 22 Oct 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>gglimpse or tibblet, tlimpse or dfsum</title>
  <link>https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/2024-09-30-gglimpse.html</link>
  <description><![CDATA[ 




<p>All in all, I like the summarytools package – however – I don’t like its heavy dependencies. Here, I want to create a lightweight alternative!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'summarytools'</span>)</span></code></pre></div>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">mm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(mtcars), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.before =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dfSummary</span>(mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grid'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plain.ascii =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmp.img.dir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plots'</span>)</span></code></pre></div>
<pre><code>temporary images written to '/Users/seb/Documents/Projects/00_websites/sbloggel/posts/2024-09-30-gglimpse/plots'</code></pre>
<section id="data-frame-summary" class="level3">
<h3 class="anchored" data-anchor-id="data-frame-summary">Data Frame Summary</h3>
<section id="mm" class="level4">
<h4 class="anchored" data-anchor-id="mm">mm</h4>
<p><strong>Dimensions:</strong> 32 x 12<br>
<strong>Duplicates:</strong> 0</p>
<table class="table">
<colgroup>
<col style="width: 4%">
<col style="width: 11%">
<col style="width: 24%">
<col style="width: 17%">
<col style="width: 20%">
<col style="width: 9%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th>No</th>
<th>Variable</th>
<th>Stats / Values</th>
<th>Freqs (% of Valid)</th>
<th>Graph</th>
<th>Valid</th>
<th>Missing</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>model_name<br>
[character]</td>
<td>1. AMC Javelin<br>
2. Cadillac Fleetwood<br>
3. Camaro Z28<br>
4. Chrysler Imperial<br>
5. Datsun 710<br>
6. Dodge Challenger<br>
7. Duster 360<br>
8. Ferrari Dino<br>
9. Fiat 128<br>
10. Fiat X1-9<br>
[ 22 others ]</td>
<td>1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
1 ( 3.1%)<br>
22 (68.8%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0114.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>2</td>
<td>mpg<br>
[numeric]</td>
<td>Mean (sd) : 20.1 (6)<br>
min &lt; med &lt; max:<br>
10.4 &lt; 19.2 &lt; 33.9<br>
IQR (CV) : 7.4 (0.3)</td>
<td>25 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0115.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>3</td>
<td>cyl<br>
[numeric]</td>
<td>Mean (sd) : 6.2 (1.8)<br>
min &lt; med &lt; max:<br>
4 &lt; 6 &lt; 8<br>
IQR (CV) : 4 (0.3)</td>
<td>4 : 11 (34.4%)<br>
6 : 7 (21.9%)<br>
8 : 14 (43.8%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0116.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>4</td>
<td>disp<br>
[numeric]</td>
<td>Mean (sd) : 230.7 (123.9)<br>
min &lt; med &lt; max:<br>
71.1 &lt; 196.3 &lt; 472<br>
IQR (CV) : 205.2 (0.5)</td>
<td>27 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0117.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>5</td>
<td>hp<br>
[numeric]</td>
<td>Mean (sd) : 146.7 (68.6)<br>
min &lt; med &lt; max:<br>
52 &lt; 123 &lt; 335<br>
IQR (CV) : 83.5 (0.5)</td>
<td>22 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0118.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>6</td>
<td>drat<br>
[numeric]</td>
<td>Mean (sd) : 3.6 (0.5)<br>
min &lt; med &lt; max:<br>
2.8 &lt; 3.7 &lt; 4.9<br>
IQR (CV) : 0.8 (0.1)</td>
<td>22 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0119.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>7</td>
<td>wt<br>
[numeric]</td>
<td>Mean (sd) : 3.2 (1)<br>
min &lt; med &lt; max:<br>
1.5 &lt; 3.3 &lt; 5.4<br>
IQR (CV) : 1 (0.3)</td>
<td>29 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0120.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>8</td>
<td>qsec<br>
[numeric]</td>
<td>Mean (sd) : 17.8 (1.8)<br>
min &lt; med &lt; max:<br>
14.5 &lt; 17.7 &lt; 22.9<br>
IQR (CV) : 2 (0.1)</td>
<td>30 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0121.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>9</td>
<td>vs<br>
[numeric]</td>
<td>Min : 0<br>
Mean : 0.4<br>
Max : 1</td>
<td>0 : 18 (56.2%)<br>
1 : 14 (43.8%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0122.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>10</td>
<td>am<br>
[numeric]</td>
<td>Min : 0<br>
Mean : 0.4<br>
Max : 1</td>
<td>0 : 19 (59.4%)<br>
1 : 13 (40.6%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0123.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>11</td>
<td>gear<br>
[numeric]</td>
<td>Mean (sd) : 3.7 (0.7)<br>
min &lt; med &lt; max:<br>
3 &lt; 4 &lt; 5<br>
IQR (CV) : 1 (0.2)</td>
<td>3 : 15 (46.9%)<br>
4 : 12 (37.5%)<br>
5 : 5 (15.6%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0124.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>12</td>
<td>carb<br>
[numeric]</td>
<td>Mean (sd) : 2.8 (1.6)<br>
min &lt; med &lt; max:<br>
1 &lt; 2 &lt; 8<br>
IQR (CV) : 2 (0.6)</td>
<td>1 : 7 (21.9%)<br>
2 : 10 (31.2%)<br>
3 : 3 ( 9.4%)<br>
4 : 10 (31.2%)<br>
6 : 1 ( 3.1%)<br>
8 : 1 ( 3.1%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/plots/ds0125.png" class="img-fluid"></td>
<td>32<br>
(100.0%)</td>
<td>0<br>
(0.0%)</td>
</tr>
</tbody>
</table>


</section>
</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-09-30-gglimpse/2024-09-30-gglimpse.html</guid>
  <pubDate>Sun, 29 Sep 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Hypothesis testing in mixed linear models with a factorial design</title>
  <link>https://sbloggel.netlify.app/posts/2024-09-30-hypothesis-testing-in-mixed-linear-models-with-a-factorial-design/2024-09-30-hypothesis-testing-in-mixed-linear-models-with-a-factorial-design.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ID =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hh =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time'</span>, time, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group'</span>, group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>))</span>
<span id="cb1-3"></span>
<span id="cb1-4">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> hh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(ID), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span>
<span id="cb1-5"></span>
<span id="cb1-6">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))</span>
<span id="cb1-8"></span>
<span id="cb1-9"></span>
<span id="cb1-10">fm_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> ID), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span>
<span id="cb1-11">fm_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> hh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> ID), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span>
<span id="cb1-12"></span>
<span id="cb1-13">fm_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML ['lmerMod']
Formula: y ~ time * group + (1 | ID)
   Data: dat
REML criterion at convergence: 92.9467
Random effects:
 Groups   Name        Std.Dev.
 ID       (Intercept) 0.9389  
 Residual             1.2076  
Number of obs: 30, groups:  ID, 5
Fixed Effects:
 (Intercept)         time2         time3        group2  time2:group2  
    -0.08427       2.12602      -0.21546      -0.15532      -3.74877  
time3:group2  
    -0.65262  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fm_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML ['lmerMod']
Formula: y ~ hh - 1 + (1 | ID)
   Data: dat
REML criterion at convergence: 92.9467
Random effects:
 Groups   Name        Std.Dev.
 ID       (Intercept) 0.9389  
 Residual             1.2076  
Number of obs: 30, groups:  ID, 5
Fixed Effects:
hhtime_1_group_1  hhtime_1_group_2  hhtime_2_group_1  hhtime_2_group_2  
        -0.08427          -0.23959           2.04174          -1.86234  
hhtime_3_group_1  hhtime_3_group_2  
        -0.29973          -1.10767  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AIC</span>(fm_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 108.9467</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AIC</span>(fm_2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 108.9467</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fm_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML ['lmerMod']
Formula: y ~ time * group + (1 | ID)
   Data: dat

REML criterion at convergence: 92.9

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-1.7375 -0.5930  0.2371  0.6309  1.1804 

Random effects:
 Groups   Name        Variance Std.Dev.
 ID       (Intercept) 0.8816   0.9389  
 Residual             1.4582   1.2076  
Number of obs: 30, groups:  ID, 5

Fixed effects:
             Estimate Std. Error t value
(Intercept)  -0.08427    0.68408  -0.123
time2         2.12602    0.76373   2.784
time3        -0.21546    0.76373  -0.282
group2       -0.15532    0.76373  -0.203
time2:group2 -3.74877    1.08007  -3.471
time3:group2 -0.65262    1.08007  -0.604

Correlation of Fixed Effects:
            (Intr) time2  time3  group2 tm2:g2
time2       -0.558                            
time3       -0.558  0.500                     
group2      -0.558  0.500  0.500              
time2:grop2  0.395 -0.707 -0.354 -0.707       
time3:grop2  0.395 -0.354 -0.707 -0.707  0.500</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fm_2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML ['lmerMod']
Formula: y ~ hh - 1 + (1 | ID)
   Data: dat

REML criterion at convergence: 92.9

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-1.7375 -0.5930  0.2371  0.6309  1.1804 

Random effects:
 Groups   Name        Variance Std.Dev.
 ID       (Intercept) 0.8816   0.9389  
 Residual             1.4582   1.2076  
Number of obs: 30, groups:  ID, 5

Fixed effects:
                 Estimate Std. Error t value
hhtime_1_group_1 -0.08427    0.68408  -0.123
hhtime_1_group_2 -0.23959    0.68408  -0.350
hhtime_2_group_1  2.04174    0.68408   2.985
hhtime_2_group_2 -1.86234    0.68408  -2.722
hhtime_3_group_1 -0.29973    0.68408  -0.438
hhtime_3_group_2 -1.10767    0.68408  -1.619

Correlation of Fixed Effects:
            h_1__1 h_1__2 h_2__1 h_2__2 h_3__1
hhtm_1_gr_2 0.377                             
hhtm_2_gr_1 0.377  0.377                      
hhtm_2_gr_2 0.377  0.377  0.377               
hhtm_3_gr_1 0.377  0.377  0.377  0.377        
hhtm_3_gr_2 0.377  0.377  0.377  0.377  0.377 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fm_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> (Intercept)        time2        time3       group2 time2:group2 time3:group2 
 -0.08427219   2.12601590  -0.21545931  -0.15531723  -3.74876543  -0.65261665 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fixef</span>(fm_2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>hhtime_1_group_1 hhtime_1_group_2 hhtime_2_group_1 hhtime_2_group_2 
     -0.08427219      -0.23958942       2.04174371      -1.86233895 
hhtime_3_group_1 hhtime_3_group_2 
     -0.29973150      -1.10766538 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glht</span>(fm_1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time2 == 0'</span>,</span>
<span id="cb17-2">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time3 == 0'</span>,</span>
<span id="cb17-3">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time2 + group2 + time2:group2 == 0'</span>,</span>
<span id="cb17-4">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time3 + group2 + time3:group2 == 0'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
     General Linear Hypotheses

Linear Hypotheses:
                                   Estimate
time2 == 0                           2.1260
time3 == 0                          -0.2155
time2 + group2 + time2:group2 == 0  -1.7781
time3 + group2 + time3:group2 == 0  -1.0234</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glht</span>(fm_2, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hhtime_2_group_1 - hhtime_1_group_1 == 0'</span>,</span>
<span id="cb19-2">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hhtime_3_group_1 - hhtime_1_group_1 == 0'</span>,</span>
<span id="cb19-3">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hhtime_2_group_2 - hhtime_1_group_2 == 0'</span>,</span>
<span id="cb19-4">             <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hhtime_3_group_2 - hhtime_1_group_2 == 0'</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
     General Linear Hypotheses

Linear Hypotheses:
                                         Estimate
hhtime_2_group_1 - hhtime_1_group_1 == 0   2.1260
hhtime_3_group_1 - hhtime_1_group_1 == 0  -0.2155
hhtime_2_group_2 - hhtime_1_group_2 == 0  -1.6227
hhtime_3_group_2 - hhtime_1_group_2 == 0  -0.8681</code></pre>
</div>
</div>



 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-09-30-hypothesis-testing-in-mixed-linear-models-with-a-factorial-design/2024-09-30-hypothesis-testing-in-mixed-linear-models-with-a-factorial-design.html</guid>
  <pubDate>Sun, 29 Sep 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Pi mal Daumen - Elektromobilität</title>
  <link>https://sbloggel.netlify.app/posts/2024-09-30-pi-mal-daumen---elektromobilität/2024-09-30-pi-mal-daumen---elektromobilität.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">(J_per_kWh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3600000</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">(J_per_liter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3e7</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3e+07</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">(kWh_per_liter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> J_per_liter <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> J_per_kWh)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8.333333</code></pre>
</div>
</div>
<ul>
<li>1 Liter Benzin hat ungefähr 8.3 kWh!</li>
<li>Opel Corsa Elektor verbraucht ca. 20 kWh pro 100 Kilometer</li>
<li>Opel Corsa Verbrenner verbraucht ca. 5 Liter pro 100 Kilometer</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">(verbrenner_fold_consumption <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> J_per_liter) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> J_per_kWh))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.083333</code></pre>
</div>
</div>
<ul>
<li>Primärenergieverbrauch eines Opel Benziner vs.&nbsp;Elektro ganz grob doppelt so groß!</li>
<li>Unser Gesamtstromverbrauch entspricht ca. 7.000 km mit einem Opel Corsa Elektro</li>
<li>Unsere Gesamtheizenergie enspricht ca. 40.000 km mit einem Opel Corsa Elektro</li>
</ul>



 ]]></description>
  <category>R</category>
  <category>Sustainibility</category>
  <guid>https://sbloggel.netlify.app/posts/2024-09-30-pi-mal-daumen---elektromobilität/2024-09-30-pi-mal-daumen---elektromobilität.html</guid>
  <pubDate>Sun, 29 Sep 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Energie</title>
  <link>https://sbloggel.netlify.app/posts/2024-09-24-energie/2024-09-24-energie.html</link>
  <description><![CDATA[ 




<section id="pi-mal-daumen-berechnungen" class="level2">
<h2 class="anchored" data-anchor-id="pi-mal-daumen-berechnungen">Pi-mal-Daumen-Berechnungen</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Schätzwert für Leistung des menschlichen Körpers</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># entspricht 2160 kcal pro Tag</span></span>
<span id="cb2-3">p_human_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ca. 10.000 kWh pro Person Heizenergie pro Jahr</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (https://www.thermondo.de/info/rat/heizen/energieverbrauch-durchschnittsfamilie/) </span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># das ist wahrscheinlich ein recht hoher Wert</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># entspricht einer Leistung von:</span></span>
<span id="cb2-9">(p_heating_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1141.553</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wir als vierköpfige Familie haben in 2023 ca. 1.400 kWh Strom verbraucht</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Das entspricht einer pro-Kopf-Leistung von:</span></span>
<span id="cb4-3">(p_electricity_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3e3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 37.10046</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wieviel Fernwärme wir in den letzten Jahrne ca. pro Jahr  bezogen haben:</span></span>
<span id="cb6-2">(W_kWh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8000</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">(p_heating_BoGe_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 913.242</code></pre>
</div>
</div>
<ul>
<li>Nach diesen Schätzwerten verbrauchen wir als gesamte Familie weniger Heizenergie als ein Durchschnittsdeutscher!</li>
<li>Kosten pro kWh Fernwärme in DD ca. 20 ct – <a href="https://www.drewag.de/wps/portal/drewag/cms/menu_main/privatkunden/waerme/tarife/fernwaerme">Link</a></li>
<li>Wirkungsgrad von Fernwärme: Laut ChatGPT 75%-90% – <a href="https://chatgpt.com/share/66f4fff0-d55c-8013-9544-dadcf72a8270">Link</a></li>
</ul>
</section>
<section id="typischer-co2-fußabdruck-einer-in-deutschland-lebenden-person" class="level2">
<h2 class="anchored" data-anchor-id="typischer-co2-fußabdruck-einer-in-deutschland-lebenden-person">Typischer CO2-Fußabdruck einer in Deutschland lebenden Person</h2>
<ul>
<li><a href="https://chatgpt.com/share/66f26e23-4188-8013-af74-26280eb12039">Recherche von ChatGPT</a>
<ul>
<li>Insgesamt ca. 20.000 kWh (16500 - 22500 kWh) pro Person pro Jahr
<ul>
<li>Strom: 1500 bis 2000 kWh</li>
<li>Heizenergie: 8000 bis 10000 kWh</li>
<li>Transportenergie: 3000 bis 4000 kWh</li>
<li>Energie für Nahrung: 2000 bis 3000 kWh</li>
<li>Energie für andere Produkte: 2000 bis 3500 kWh</li>
</ul></li>
<li>–&gt; Großteil (fast die Hälfte) des Energieverbrauchs der Privatpersonen für Heizung</li>
</ul></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1500</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 16500</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3500</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 22500</code></pre>
</div>
</div>
</section>
<section id="primärenergieverbrauch-in-deutschland" class="level2">
<h2 class="anchored" data-anchor-id="primärenergieverbrauch-in-deutschland">Primärenergieverbrauch in Deutschland</h2>
<ul>
<li><a href="https://www.cleanenergywire.org/factsheets/germanys-energy-consumption-and-power-mix-charts">Infos von cleanenergywire.org</a></li>
<li>Hier ein heruntergeladenes, interessantes Diagramm von cleanenergywire.org: <img src="https://sbloggel.netlify.app/posts/2024-09-24-energie/fig11-final-energy-consumption-consumer-group-1990-2022.png" class="img-fluid"></li>
<li>Gesamtprimärenergieverbrach ca. 10.000 PJ = 1e19 Joules</li>
<li>Pro Person (etwas mehr als das von ChatGPT pro Person angegebene – aber dort auch ohne Industrie)</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">(primaerenergie_pro_person_cleanenergywire_kWh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e19</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e7</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 34722.22</code></pre>
</div>
</div>
<ul>
<li>Leistung Primärenergie pro Person:</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">(p_primaerenergie_pro_person_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e7</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3963.724</code></pre>
</div>
</div>
</section>
<section id="wie-viel-kann-photovoltaik-pv-leisten" class="level2">
<h2 class="anchored" data-anchor-id="wie-viel-kann-photovoltaik-pv-leisten">Wie viel kann Photovoltaik (PV) leisten?</h2>
<ul>
<li>ca. 200 kWh Ertrag pro qm PV pro Jahr (<a href="https://www.iwb.ch/klimadreh/ratgeber/solaranlage/wie-viel-flaeche-benoetigt-meine-solaranlage">Quelle</a>)
<ul>
<li>entspricht ca. 20 W im Jahresmittel:</li>
</ul></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">(p_pv_pro_qm_W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">365</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3600</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 22.83105</code></pre>
</div>
</div>
<p>Also PV-Fläche pro Person benötigt:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">(A_PV_pro_person_qm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p_primaerenergie_pro_person_W <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> p_pv_pro_qm_W)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 173.6111</code></pre>
</div>
</div>
<p>Fläche pro Person in Deutschland vorhanden:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">(A_pro_person_qm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6e11</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8e7</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4500</code></pre>
</div>
</div>
<p>Also müsste ein Anteil von 0.0385802 in Deutschland mit PV belegt werden um den PV-Bedarf komplett zu decken. Könnte gehen, oder?</p>


</section>

 ]]></description>
  <category>Sustainibility</category>
  <guid>https://sbloggel.netlify.app/posts/2024-09-24-energie/2024-09-24-energie.html</guid>
  <pubDate>Mon, 23 Sep 2024 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Testing the package summarytools</title>
  <link>https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/2024-09-17-testing-the-package-summarytools.html</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'summarytools'</span>)</span></code></pre></div>
</div>
<section id="standard-settings" class="level2">
<h2 class="anchored" data-anchor-id="standard-settings">Standard settings</h2>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dfSummary</span>(iris)</span></code></pre></div>
<p>Data Frame Summary<br>
iris<br>
Dimensions: 150 x 5<br>
Duplicates: 1</p>
<table class="table">
<colgroup>
<col style="width: 4%">
<col style="width: 13%">
<col style="width: 22%">
<col style="width: 19%">
<col style="width: 20%">
<col style="width: 10%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">No</th>
<th style="text-align: left;">Variable</th>
<th style="text-align: left;">Stats / Values</th>
<th style="text-align: left;">Freqs (% of Valid)</th>
<th style="text-align: left;">Graph</th>
<th style="text-align: left;">Valid</th>
<th style="text-align: left;">Missing</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">Sepal.Length [numeric]</td>
<td style="text-align: left;">Mean (sd) : 5.8 (0.8) min &lt; med &lt; max: 4.3 &lt; 5.8 &lt; 7.9 IQR (CV) : 1.3 (0.1)</td>
<td style="text-align: left;">35 distinct values</td>
<td style="text-align: left;">. . : : : : : : : : : : : : : : : : : : : : : : : :</td>
<td style="text-align: left;">150 (100.0%)</td>
<td style="text-align: left;">0 (0.0%)</td>
</tr>
<tr class="even">
<td style="text-align: left;">2</td>
<td style="text-align: left;">Sepal.Width [numeric]</td>
<td style="text-align: left;">Mean (sd) : 3.1 (0.4) min &lt; med &lt; max: 2 &lt; 3 &lt; 4.4 IQR (CV) : 0.5 (0.1)</td>
<td style="text-align: left;">23 distinct values</td>
<td style="text-align: left;">: : . : : : : : . . : : : : : :</td>
<td style="text-align: left;">150 (100.0%)</td>
<td style="text-align: left;">0 (0.0%)</td>
</tr>
<tr class="odd">
<td style="text-align: left;">3</td>
<td style="text-align: left;">Petal.Length [numeric]</td>
<td style="text-align: left;">Mean (sd) : 3.8 (1.8) min &lt; med &lt; max: 1 &lt; 4.3 &lt; 6.9 IQR (CV) : 3.5 (0.5)</td>
<td style="text-align: left;">43 distinct values</td>
<td style="text-align: left;">: : . : : : : . : : : : : . : : . : : : : : .</td>
<td style="text-align: left;">150 (100.0%)</td>
<td style="text-align: left;">0 (0.0%)</td>
</tr>
<tr class="even">
<td style="text-align: left;">4</td>
<td style="text-align: left;">Petal.Width [numeric]</td>
<td style="text-align: left;">Mean (sd) : 1.2 (0.8) min &lt; med &lt; max: 0.1 &lt; 1.3 &lt; 2.5 IQR (CV) : 1.5 (0.6)</td>
<td style="text-align: left;">22 distinct values</td>
<td style="text-align: left;">: : : . . : : : : : . : : : : : . : : :</td>
<td style="text-align: left;">150 (100.0%)</td>
<td style="text-align: left;">0 (0.0%)</td>
</tr>
<tr class="odd">
<td style="text-align: left;">5</td>
<td style="text-align: left;">Species [factor]</td>
<td style="text-align: left;">1. setosa 2. versicolor 3. virginica</td>
<td style="text-align: left;">50 (33.3%) 50 (33.3%) 50 (33.3%)</td>
<td style="text-align: left;">IIIIII IIIIII IIIIII</td>
<td style="text-align: left;">150 (100.0%)</td>
<td style="text-align: left;">0 (0.0%)</td>
</tr>
</tbody>
</table>
</section>
<section id="with-images" class="level2">
<h2 class="anchored" data-anchor-id="with-images">With images</h2>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dfSummary</span>(iris,</span>
<span id="cb3-2">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plain.ascii  =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, </span>
<span id="cb3-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style        =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>, </span>
<span id="cb3-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.magnif =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, </span>
<span id="cb3-5">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valid.col    =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb3-6">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmp.img.dir  =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plots"</span>)</span></code></pre></div>
<pre><code>temporary images written to '/Users/seb/Documents/Projects/00_websites/sbloggel/posts/2024-09-17-testing-the-package-summarytools/plots'</code></pre>
<section id="data-frame-summary" class="level3">
<h3 class="anchored" data-anchor-id="data-frame-summary">Data Frame Summary</h3>
<section id="iris" class="level4">
<h4 class="anchored" data-anchor-id="iris">iris</h4>
<p><strong>Dimensions:</strong> 150 x 5<br>
<strong>Duplicates:</strong> 1</p>
<table class="table">
<colgroup>
<col style="width: 4%">
<col style="width: 15%">
<col style="width: 23%">
<col style="width: 20%">
<col style="width: 22%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th>No</th>
<th>Variable</th>
<th>Stats / Values</th>
<th>Freqs (% of Valid)</th>
<th>Graph</th>
<th>Missing</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>Sepal.Length<br>
[numeric]</td>
<td>Mean (sd) : 5.8 (0.8)<br>
min &lt; med &lt; max:<br>
4.3 &lt; 5.8 &lt; 7.9<br>
IQR (CV) : 1.3 (0.1)</td>
<td>35 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/plots/ds0006.png" class="img-fluid"></td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>2</td>
<td>Sepal.Width<br>
[numeric]</td>
<td>Mean (sd) : 3.1 (0.4)<br>
min &lt; med &lt; max:<br>
2 &lt; 3 &lt; 4.4<br>
IQR (CV) : 0.5 (0.1)</td>
<td>23 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/plots/ds0007.png" class="img-fluid"></td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>3</td>
<td>Petal.Length<br>
[numeric]</td>
<td>Mean (sd) : 3.8 (1.8)<br>
min &lt; med &lt; max:<br>
1 &lt; 4.3 &lt; 6.9<br>
IQR (CV) : 3.5 (0.5)</td>
<td>43 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/plots/ds0008.png" class="img-fluid"></td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="even">
<td>4</td>
<td>Petal.Width<br>
[numeric]</td>
<td>Mean (sd) : 1.2 (0.8)<br>
min &lt; med &lt; max:<br>
0.1 &lt; 1.3 &lt; 2.5<br>
IQR (CV) : 1.5 (0.6)</td>
<td>22 distinct values</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/plots/ds0009.png" class="img-fluid"></td>
<td>0<br>
(0.0%)</td>
</tr>
<tr class="odd">
<td>5</td>
<td>Species<br>
[factor]</td>
<td>1. setosa<br>
2. versicolor<br>
3. virginica</td>
<td>50 (33.3%)<br>
50 (33.3%)<br>
50 (33.3%)</td>
<td><img src="https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/plots/ds0010.png" class="img-fluid"></td>
<td>0<br>
(0.0%)</td>
</tr>
</tbody>
</table>


</section>
</section>
</section>

 ]]></description>
  <category>R</category>
  <guid>https://sbloggel.netlify.app/posts/2024-09-17-testing-the-package-summarytools/2024-09-17-testing-the-package-summarytools.html</guid>
  <pubDate>Mon, 16 Sep 2024 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
