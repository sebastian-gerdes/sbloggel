---
title: Getting to know tidymodels
author: Sebastian Gerdes
date: 2023-08-04
categories:
  - R
toc: true
# draft: true
# execute: 
#   echo: false
#  cache: true
---

* Tutorials by Julia Silge: [Link](https://www.youtube.com/@JuliaSilge/search)
* Blog post criticising tidymodels: [Link](https://staffblogs.le.ac.uk/teachingr/2020/10/05/on-not-using-tidymodels/), written by [this person](https://github.com/thompson575)

## Which packages belong to the metapackage tidymodels
```{r}
tidymodels_packages(include_self = TRUE)
```



## Tutorial 1 - palmerpenguins dataset
* [Link](https://juliasilge.com/blog/palmer-penguins/)
```{r}
set.seed(1)
library('tidyverse')
library('palmerpenguins')

penguins_df <- penguins %>%
  filter(!is.na(sex)) %>%
  select(-year, -island)
```

```{r}
library(tidymodels)

glimpse(penguins_df)
penguin_split <- initial_split(penguins_df, strata = sex)
str(penguin_split)

penguin_train <- training(penguin_split)
str(penguin_train)
penguin_test <- testing(penguin_split)
```

```{r}
set.seed(123)
penguin_boot <- bootstraps(penguin_train)
penguin_boot
```

### Question:
```{r}
# how can I extract a single bootstrap sample?
x <- penguin_boot |> 
  select(splits) |> 
  slice(2) |>
  pull()

x[[1]]$data


x <- penguin_boot |> 
  filter(id == 'Bootstrap01') |> 
  select(splits) |> 
  pull()

x[[1]]$data

```

```{r}
glm_spec <- logistic_reg() %>%
  set_engine("glm")

glm_spec
```

```{r}
rf_spec <- rand_forest() %>%
  set_mode("classification") %>%
  set_engine("ranger")

rf_spec
```


```{r}
penguin_wf <- workflow() %>%
  add_formula(sex ~ .)

penguin_wf
```

```{r}
glm_rs <- penguin_wf %>%
  add_model(glm_spec) %>%
  fit_resamples(
    resamples = penguin_boot,
    control = control_resamples(save_pred = TRUE)
  )

glm_rs
```


```{r}
rf_rs <- penguin_wf %>%
  add_model(rf_spec) %>%
  fit_resamples(
    resamples = penguin_boot,
    control = control_resamples(save_pred = TRUE)
  )

rf_rs
```

```{r}
collect_metrics(rf_rs)
collect_metrics(glm_rs)
```

```{r}
glm_rs %>%
  conf_mat_resampled()
```


```{r}
glm_rs %>%
  collect_predictions() %>%
  group_by(id) %>%
  roc_curve(sex, .pred_female) %>%
  ggplot(aes(1 - specificity, sensitivity, color = id)) +
  geom_abline(lty = 2, color = "gray80", linewidth = 1.5) +
  geom_path(show.legend = FALSE, alpha = 0.6, linewidth = 1.2) +
  coord_equal()
```

```{r}
penguin_final <- penguin_wf %>%
  add_model(glm_spec) %>%
  last_fit(penguin_split)

penguin_final
```


```{r}
collect_metrics(penguin_final)
```

```{r}
collect_predictions(penguin_final) %>%
  conf_mat(sex, .pred_class)
```

```{r}
penguin_final$.workflow[[1]] %>%
  tidy(exponentiate = TRUE)
```


```{r}
penguins %>%
  filter(!is.na(sex)) %>%
  ggplot(aes(bill_depth_mm, bill_length_mm, color = sex, size = body_mass_g)) +
  geom_point(alpha = 0.5) +
  facet_wrap(~species)
```

